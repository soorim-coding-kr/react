{"ast":null,"code":"var _jsxFileName = \"/Volumes/soorim/react-study/210628_react/src/todos/TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './TodoInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoInput = ({\n  onAdd\n}) => {\n  _s();\n\n  const textRef = useRef();\n  const [text, setText] = useState('');\n\n  const changeInput = e => {\n    const {\n      value\n    } = e.target;\n    setText(value);\n  }; // 엔터를 쳤을때에도 결과가 출력이 되게\n\n\n  const onSubmit = e => {\n    // e.preventDefault 를 사용하여 새로고침을 방지\n    e.preventDefault();\n    onAdd(text); // 엔터 클릭 시 인풋 값을 지워줌\n\n    setText('');\n    textRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onSubmit: onSubmit,\n      onChange: changeInput,\n      ref: textRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoInput, \"84IChGIJhT7e3xS+zDxxZsHSt74=\");\n\n_c = TodoInput;\nexport default TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["/Volumes/soorim/react-study/210628_react/src/todos/TodoInput.js"],"names":["React","useRef","useState","TodoInput","onAdd","textRef","text","setText","changeInput","e","value","target","onSubmit","preventDefault","current","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,iBAAP;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC3B,QAAMC,OAAO,GAACJ,MAAM,EAApB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACvB,UAAM;AAACC,MAAAA;AAAD,QAAUD,CAAC,CAACE,MAAlB;AACAJ,IAAAA,OAAO,CAACG,KAAD,CAAP;AACH,GAHD,CAH2B,CAO/B;;;AACI,QAAME,QAAQ,GAAIH,CAAD,IAAO;AACpB;AACAA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,KAAK,CAACE,IAAD,CAAL,CAHoB,CAIpB;;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,OAAO,CAACS,OAAR,CAAgBC,KAAhB;AACH,GAPD;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAET,IAA1B;AAAgC,MAAA,QAAQ,EAAEM,QAA1C;AAAoD,MAAA,QAAQ,EAAEJ,WAA9D;AAA2E,MAAA,GAAG,EAAEH;AAAhF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMF,S;;KAAAA,S;AAyBN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './TodoInput.css'\nconst TodoInput = ({onAdd}) => {\n    const textRef=useRef()\n    const [text, setText] = useState('')\n    const changeInput = (e) => {\n        const {value} = e.target\n        setText(value)\n    }\n// 엔터를 쳤을때에도 결과가 출력이 되게\n    const onSubmit = (e) => {\n        // e.preventDefault 를 사용하여 새로고침을 방지\n        e.preventDefault()  \n        onAdd(text)\n        // 엔터 클릭 시 인풋 값을 지워줌\n        setText('')\n        textRef.current.focus()\n    }\n\n    return (\n        <form className=\"TodoInput\">\n            <input type=\"text\" value={text} onSubmit={onSubmit} onChange={changeInput} ref={textRef}/>\n            <button type=\"submit\">추가</button>\n        </form>\n    );\n};\n\nexport default TodoInput;"]},"metadata":{},"sourceType":"module"}